{\rtf1\ansi\ansicpg1252\cocoartf1404\cocoasubrtf470
{\fonttbl\f0\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;}
\margl1440\margr1440\vieww10800\viewh8400\viewkind0
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0

\f0\fs24 \cf0 /*--Question 1\
select * from subscriptions limit 100;\
\
--Question 2\
select distinct subscription_start\
from subscriptions\
order by subscription_start asc;\
--Or\
select min(subscription_start), max(subscription_start) from subscriptions;\
\
--Question 3\
select distinct segment from subscriptions;\
*/\
\
with months as\
(\
 select '2017-01-01' as firstday,\
				'2017-01-31' as lastday\
 UNION\
 select '2017-02-01' as firstday,\
				'2017-02-28' as lastday\
 UNION\
 select '2017-03-01' as firstday,\
				'2017-03-31' as lastday\
),\
segments as\
(\
 select distinct segment as 'seg' from subscriptions\
),\
cross_join as\
(\
 select * from subscriptions \
  cross join months\
  cross join segments\
),\
status as \
(\
 select cross_join.id, firstday as 'month', seg,\
  subscription_start, subscription_end, segment,\
 case when (segment = seg) \
  and (subscription_start < firstday \
       and (subscription_end > firstday or \
           subscription_end is null))\
  then 1\
  else 0\
 end as 'is_active',\
\
  case when (segment = seg) \
  and (subscription_start < firstday \
       and (subscription_end >= firstday and \
           subscription_end <= lastday))\
  then 1\
  else 0\
 end as 'is_canceled'\
\
 from cross_join\
),\
status_aggregate as\
(\
 select month, segment, sum(is_active) as 'sum_active',\
  sum(is_canceled) as 'sum_canceled'\
 from status\
 group by segment, month\
)\
\
select month, segment, 1.0 * sum_canceled/sum_active as 'churn_rates' \
from status_aggregate;}